
@{
    ViewBag.Title = "Studentpayment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style{
    <style>
        .linu {
            width: 200px;
        }
    </style>
}

<form class="layui-form" action="">
    <div class="layui-carousel-left">
        <div class="layui-row ">

                <div class="layui-row layui-form-item">

                  
                    <div class="layui-col-xs2.5">
                        <label class="layui-form-label">姓名</label>
                        <div class="layui-input-inline">
                            <input type="tel" name="Name" lay-verify="Name" id="Name" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-col-xs3">
                        <label class="layui-form-label">性别</label>
                        <div class="layui-input-block">
                            <input type="radio" name="Sex" value="false" title="女">
                            <input type="radio" name="Sex" value="true" title="男">
                            <input type="radio" name="Sex" value="" title="全部" checked="checked">
                        </div>
                    </div>
                    <div class="layui-col-xs2.5">
                        <label class="layui-form-label">学号</label>
                        <div class="layui-input-inline">
                            <input type="text" lay-verify="number" name="StudentNumber" class="layui-input" />

                        </div>
                    </div>

                    <div class="layui-col-xs2.5">

                        <label class="layui-form-label">身份证</label>
                        <div class="layui-input-inline">
                            <input type="text" lay-verify="identityi" name="identitydocument" class="layui-input linu" />

                        </div>

                    </div>
                    <div style="position:absolute;left:83%;top:67px;">
                        <button class="layui-btn" lay-submit="" type="button" lay-filter="demo2">查询</button>
                    </div>


                </div>

            </div>

        </div>
    
</form>
<div style="width:200px;height:440px; position:absolute; top:125px;border:1px solid #e6e6e6;">
    <div  class="demo-tree-more">
        <ul id="test13">

        </ul>
    </div>
</div>
<div style="margin-left:210px;">
    <table class="layui-hide" id="test" lay-filter="test"></table>
</div>



@section script{
    @*头部工具栏*@

    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="select">查看缴费记录</a>

    </script>
    <script>
      
        //时间转换方法
        function TimeChange(newtime) {
            if (newtime == null)
                return "";
            var date = new Date(parseInt(newtime.slice(6)));
            var year = date.getFullYear();
            var month = date.getMonth();
            if (month < 10) {
                month = "0" + (parseInt(month) + 1);
            }
            var day = date.getDate();
            if (day < 10) {
                day = "0" + day;
            }
            var result = year + '-' + month + '-' + day;
            return result;
        }

        //计算年龄
        function Age(strBirthday) { //传入形式yyyy-MM-dd
            //strBirthday = util.formatTime(strBirthday);转换成yyyy-MM-dd形式
            var returnAge
            var strBirthdayArr = strBirthday.split('-')
            var birthYear = strBirthdayArr[0]
            var birthMonth = strBirthdayArr[1]
            var birthDay = strBirthdayArr[2]
            var d = new Date()
            var nowYear = d.getFullYear()
            var nowMonth = d.getMonth() + 1
            var nowDay = d.getDate()
            if (nowYear == birthYear) {
                returnAge = 0 //同年 则为0岁
            } else {
                var ageDiff = nowYear - birthYear //年之差
                if (ageDiff > 0) {
                    if (nowMonth == birthMonth) {
                        var dayDiff = nowDay - birthDay //日之差
                        if (dayDiff < 0) {
                            returnAge = ageDiff - 1
                        } else {
                            returnAge = ageDiff
                        }
                    } else {
                        var monthDiff = nowMonth - birthMonth //月之差
                        if (monthDiff < 0) {
                            returnAge = ageDiff - 1
                        } else {
                            returnAge = ageDiff
                        }
                    }
                } else {
                    returnAge = -1 //返回-1 表示出生日期输入错误 晚于今天
                }
            }
            return returnAge //返回周岁年龄
        }
        layui.use(['table', 'layer', 'tree', 'form'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var tree = layui.tree;
            //模拟数据
            var data1 = [{
                    title: '学费'
                    , id: 2000
                }, {
                    title: '食宿费'
                    , id: 2001
                }, {
                    title: '自考本科费'
                    , id: 2001
                }, {
                    title: '学杂费'
                    , id: 2001
                }, {
                    title: "阶段费用缴纳",
                    id:2003
                }
            ]
            //加载树形菜单数据
            $.post("/Finance/Pricedetails/Tree", function (data) {
                // console.log(data);
                Tree(data);
            });
            //Tree(data1);
            //费用操作页面
            function Cost(width, height,url, name,id) {
                var checkStatus = table.checkStatus('idTest');
               // console.log(checkStatus.data[0].StudentNumber);
                var da = checkStatus.data;
               
                if (checkStatus.data.length > 0) {
                    url = url + da[0].StudentNumber + "?Typeid=" + id;
                    StudentShow(url, name, 1, width, height);
             
                } else {
                    layer.alert('请选择一条数据', { icon: 0 });
                }
             
            }

            //无连接线风格
            function Tree(da) {
                tree.render({
                    elem: '#test13'
                   ,data: [{
                        title: '学员缴费',
                        id: "-1",
                        spread: true,
                        children: da
                    }], 
                     showLine: true  //是否开启连接线
                    , click: function (obj) {
                        $.post("/Finance/Pricedetails/IsFinanc", function (dc) {
                            if (dc == true) {
                                switch (obj.data.title) {
                                    case "自考本科费用":
                                        var checkStatus = table.checkStatus('idTest');
                                        // console.log(checkStatus.data[0].StudentNumber);
                                        var da = checkStatus.data;
                                        $.post("/Finance/Pricedetails/BoolEnroll/" + da[0].StudentNumber + "?Typeid=" + obj.data.id, function (da) {
                                            if (da > 0) {
                                                Cost(600, 500, "/Finance/Pricedetails/Undergraduatefee/", "自考本科费用", obj.data.id);
                                            } else {
                                                layer.alert('费用已交齐!', { icon: 0 });
                                            }
                                        });
                                        break;
                                    case "阶段费用缴纳":
                                        Cost(800, 750, "/Finance/Pricedetails/StudentPrice/", "阶段费用缴纳", obj.data.id);
                                        break;
                                    case "重修费":
                                        Cost(800, 500, "/Finance/Pricedetails/Otherexpenses/", "重修费用缴纳", obj.data.id);
                                        break;
                                    case "驾校费":
                                        Cost(800, 500, "/Finance/Pricedetails/Drivingschoolpayment/", "驾校费用缴纳", obj.data.id);
                                        break;
                                }
                            } else { layer.msg("当前登录账号不能进行缴费");}
                        });
                       

                    }
                });
            }
        
            //正则表达式
            form.verify({
                Name: function (value, item) { //value：表单的值、item：表单的DOM对象
                    if (!/^[^\s]*$/.test(value)) {
                        return '内容不能输入空格';
                    } else {
                        if (value == '') {
                            return '';
                        } else {
                            if (!new RegExp("^[a-zA-Z0-9_\u4e00-\u9fa5\\s·]+$").test(value)) {
                                return '姓名不能有特殊字符';
                            }
                            if (/(^\_)|(\__)|(\_+$)/.test(value)) {
                                return '姓名首尾不能出现下划线\'_\'';
                            }
                            if (!/^[a-zA-Z\u4e00-\u9fa5]+$/.test(value)) {
                                return '姓名只能由中文或字母组成';
                            }
                        }
                    }

                },//(^$)|^\d{10}$/
                identityi: function (value) {
                    if (!/^[^\s]*$/.test(value)) {
                        return '内容不能输入空格';
                    } else {
                        if (value == '') {
                            return '';
                        } else {
                            var identitydocument = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
                            if (!identitydocument.test(value)) {
                                return '请输入正确身份证号';
                            }
                        }
                    }

                },
                number: function (value) {
                    if (!/^[^\s]*$/.test(value)) {
                        return '内容不能输入空格';
                    } else {
                        if (value == '') {
                            return '';
                        } else {
                            var identitydocument = /^\d/;
                            if (!identitydocument.test(value)) {
                                return '学号由数字组成';
                            }
                        }
                    }

                }
            });
            //表格渲染
            table.render({
                elem: '#test'
                , url: '/Finance/Pricedetails/GetDate'
                , toolbar: '#toolbarDemo'
                , id: 'idTest'
                , page: true
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , cols: [[
                    { type: 'radio' }
                    , { field: 'StudentNumber', title: '学号', sort: true }
                    , { field: 'Name', title: '姓名' }
                    , {
                        field: 'Sex', title: '性别', templet: function (c) {
                            if (c.Sex == 0) {
                                return "女";
                            } else { return "男"; }
                        }
                    }
                    , {
                        field: 'BirthDate', title: '年龄', templet: function (c) {
                            return Age(TimeChange(c.BirthDate));
                        }
                    }
                    , { field: 'ClassName', title: '班级名称 ' }
                    , { field: 'identitydocument', title: '身份证号码' }
                    , { field: 'ConsultTeacher', title: '咨询师 ', width: 100 }
                    , { field: 'empName', title: '备案人 ', width: 100 }
                    , { field: 'Headmasters', title: '班主任 ', width: 100 }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo',width: 100 }
                ]]
                , page: true
                , limit: 15
                , limits: [15, 20, 25]
            });

            //监听工作条
            table.on('tool(test)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'select') { //查看

                    window.location = "/Finance/Pricedetails/Printrecord?student=" + data.StudentNumber
                }

            });

            //查询功能
            form.on('submit(demo2)', function (data) {

                var x = data.field;


                table.reload('idTest', {
                    where: {
                        Name: x.Name,
                        Sex: x.Sex,
                        StudentNumber: x.StudentNumber,
                        identitydocument: x.identitydocument
                    }, page: {
                        curr: 1
                    }
                });
                return false;
            });
        });
        function StudentShow(url, mytitle, mycloseBtn,width,hegin) {
            layui.use('layer', function () {
                var layer = layui.layer;
                layer.open({
                    type: 2,
                    content: url
                    , area: [width + 'px', hegin+'px'],
                    title: mytitle
                    , shade:0.3
                    , anim: 1
                    , closeBtn: mycloseBtn
                });
            });
        }
        function closeSelf() {
        layui.use(['layer'], function () {
            var layer = layui.layer;
            
        });
        }
      

    </script>

}
