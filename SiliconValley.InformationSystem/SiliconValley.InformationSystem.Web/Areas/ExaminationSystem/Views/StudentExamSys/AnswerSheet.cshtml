<!--学员答题页面-->
@{
    Layout = null;
}

@using SiliconValley.InformationSystem.Entity.MyEntity
@using SiliconValley.InformationSystem.Entity.ViewEntity.ExaminationSystemView
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AnswerSheet</title>
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Areas/ExaminationSystem/js/trumbowyg/design/css/trumbowyg.css" rel="stylesheet" />
    <style>

        #mypaper {
            width: 80%;
            margin: 50px auto;
        }

        #examinfo {
            width: 100%;
            height: 150px;
           
        }

            #examinfo .detail ul {
                list-style-type: none;
            }

        .detail ul li {
            float: left;
            width: 200px;
        }

            .detail ul li span {
                color: green;
            }

        #choicequestion {
            width: 100%;
            
        }

            #choicequestion .questionItem {
                font-size: 16px;
                margin-top: 60px;
            }

        .layui-form-checkbox {
            margin-left: 20px;
        }

        .layui-input-block {
            margin-top: 5px;
        }

        #AnswerQuestion textarea {
            margin-top: 20px;
        }

        #AnswerQuestion .questionItem {
            margin-top: 20px;
        }

        #ComputerQuestion {
            text-align: center;
            margin-top: 50px;
        }
        .detail label {
            font-size:20px;
        }
        .top, .topf {
            height: 300px;
            width: 250px;
        }

        .topf {
            border: 1px solid #000;
            position: fixed;
            top: 0;
            right: 0;
            text-align: center;
            font-size: 20px;
            color: #000;
        }
    </style>
</head>
<body>
    <p class="layui-elem-quote"><button type="button" id="tiqianjieshu" class="layui-btn">提前结束考试</button></p>
    <div id="mypaper" style="background:#ffffff">
        <input type="hidden" id="examid" value="@ViewBag.EXAMVIEW.ID" />
        <input type="hidden" id="BeginDate" value="@ViewBag.EXAMVIEW.BeginDate" />
        <input type="hidden" id="limit" value="@ViewBag.EXAMVIEW.TimeLimit" />
        <div id="examinfo">
            <h2 style="text-align:center;">@ViewBag.EXAMVIEW.Title</h2><h2>笔试</h2>

            <hr />
            <div class="detail">
                <ul>
                    <li><label>答题人-- </label><span>@ViewBag.AnswerSheetInfo.AnswerPerson.Name</span></li>
                    @*<li><label>考室-- </label><span>@ViewBag.AnswerSheetInfo.Classroom.ClassroomName</span></li>*@
                    @*<li><label>开始时间-- </label><span>@ViewBag.AnswerSheetInfo.BeginDate</span></li>*@
                    <li><label>时限-- </label><span>@ViewBag.AnswerSheetInfo.TimeLimit (小时)</span></li>
                    <li><label>选择题总分-- </label><span>10</span></li>
                    <li><label>笔试题总分-- </label><span>@ViewBag.AnswerSheetInfo.WrittenQuestionScores</span></li>
                    <li><label>机试题总分-- </label><span>@ViewBag.AnswerSheetInfo.ComputerQuestionScores</span></li>
                </ul>
                <br />

            </div>

        </div>

        <div id="choicequestion">
            @*<h3 style="text-align:center; font-size:18px;">选择题</h3>*@
        </div>
        <div id="AnswerQuestion">
            @*<h3 style="text-align:center; font-size:18px;">解答题</h3>*@
        </div>
        <div style="text-align:center">
            <button type="button" style="" class="layui-btn layui-btn-warm" id="COMMIT">提交笔试</button>
            @*<a  class="layui-btn layui-btn-warm" id="COMMIT">提交笔试</a>*@
        </div>

    </div>
    <div class="top">
        <div class="topf">
            <h3 style="color:red">注意事项</h3>
            检查自己的笔试选择题与解答题是否完全,发生笔试提交失败,请在桌面上创建一个文本文档,将自己的笔试题复制进去,然后重新登录,进入考试,将有自己笔试内容的文本文档跟着机试一起提交。
        </div>
    </div>

    <script language="JavaScript">

        document.getElementById("btn").onclick = function () {
            var elem = document.getElementById("mypaper");
            requestFullScreen(elem);
            layui.use(['layer'], function () {
                var layer = layui.layer;
                layer.closeAll();
            });
        };
        function requestFullScreen(element) {
            var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;
            if (requestMethod) {
                requestMethod.call(element);
            } else if (typeof window.ActiveXObject !== "undefined") {
                var wscript = new ActiveXObject("WScript.Shell");
                if (wscript !== null) {
                    wscript.SendKeys("{F11}");
                }
            }
        }
    </script>
    <script type="text/template" id="choicequestionmoban">
        <div questionid="{{=questionid}}" class="questionItem">

            <div class="title">
                <span class="questionIndex">{{=index}}</span> <code style="margin-left:5px;color:#000000">{{=question}}</code>&nbsp;&nbsp;(<span class="listScores">{{=score}}</span>分)<input type="hidden" class="hidescore" value="{{=score}}" />
            </div>
            <div class="option">
                <form>
                    <div class="optiond"><label>选项A：</label><input name="1" value="A" type="radio" /><code>{{=A}}</code></div>
                    <br />
                    <div class="optiond"><label>选项B：</label><input name="1" value="B" type="radio" /><code name="OptionA">{{=B}}</code></div>
                    <br />
                    <div class="optiond"><label>选项C：</label><input name="1" value="C" type="radio" /><code name="OptionA">{{=C}}</code></div>
                    <br />
                    <div class="optiond"><label>选项D：</label><input name="1" value="D" type="radio" /><code name="OptionA">{{=D}}</code></div>
                </form>
            </div>
        </div>
    </script>

    <script type="text/template" id="answerquestionmoban">
        <div questionid="{{=questionid}}" class="questionItem">
            @*<div>
                    <span class="questionIndex">{{=index}}</span> <code style="margin-left:5px;color:#000000">{{=question}}</code>&nbsp;&nbsp;(<span class="listScores">{{=score}}</span>分)<input type="hidden" value="{{=score}}" class="hidescore" />
                </div>*@
            <label class="questionIndex">{{=index}}</label><label style="margin-left:5px;color:#000000">{{=question}}</label>&nbsp;&nbsp;(<span class="listScores">{{=score}}</span>分)<input type="hidden" value="{{=score}}" class="hidescore" />
            <div style="position:relative;right:109px;" class="layui-input-block">
                <textarea style="height:250px" placeholder="请填写你的内容" class="layui-textarea desc" onpaste="return false"></textarea>
            </div>
            @*<div class="simple-editor"
                    <h2>答题区</h2>
                </div>*@
        </div>
    </script>

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/layui/layui.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Areas/ExaminationSystem/js/trumbowyg/trumbowyg.min.js"></script>
    <script src="~/Areas/ExaminationSystem/js/trumbowyg/langs/fr.js"></script>
    <script src="~/Areas/ExaminationSystem/js/trumbowyg/plugins/upload/trumbowyg.upload.min.js"></script>
    <script src="~/Areas/ExaminationSystem/js/trumbowyg/plugins/base64/trumbowyg.base64.min.js"></script>
    <script src="~/Areas/ExaminationSystem/js/jiami.js"></script>
    <script>

        if (!document.HTMLDOMtoString) {
            document.HTMLDOMtoString = function (HTMLDOM) {
                const div = document.createElement("div")
                div.appendChild(HTMLDOM)
                return div.innerHTML
            }
        }


        var ExamEndDateUTC;

        ///获取考试的结束时间
        function getEndTime() {
            var examid = $("#examid").val();
            $.post("/ExaminationSystem/StudentExamSys/GetExamEndDate", { examid: examid }, function (data) {


                if (data.ErrorCode == 200) {

                    var utc = data.Data.substr(data.Data.indexOf('(') + 1, 13);

                    ExamEndDateUTC = utc;

                    console.log(ExamEndDateUTC);
                }

            });
        }
        getEndTime();
        function escapeHTMLString(str) {
            str = str.replace(/</g, '&lt;');
            str = str.replace(/>/g, '&gt;');

            return str;
        }
        var formData = new FormData();  //点击提交时将要提交的数据

        ///清空表单数据   暂弃用
        function clearformData(formData, arr_key) {
            console.log(arr_key);

            for (var i = 0; i < arr_key.length; i++) {
                console.log(arr_key[i]);
                formData.set(arr_key[i], "");
                console.log(".............");
            }
        }
        var TotalScores = 40;
        var questionCount = 0;

        //获取笔试题题目个数
        $.post("/ExaminationSystem/StudentExamSys/GetQuestionCount", {}, function (result) {

            questionCount = result;

            //渲染分数
            $("#choicesQuestionScoress").find(".totalScores").text(TotalScores);
            $("#choicesQuestionScores").find(".itemScores").text((parseInt(TotalScores) / parseInt(questionCount)));


        })

        layui.use(['form', 'layer'], function () {

            var form = layui.form;
            var layer = layui.layer;
            //var bind = function () {
            //    layer.open({
            //        type: 1,
            //        area: ["700px", "500px"],
            //        content: $('#DifficultyDiv'),
            //    })
            //}
            //bind();
            var examid = $("#examid").val();

            formData.append("examid", examid);

            function loadChoiceQuestionData() {

                var index = layer.load(2, { time: 10 * 1000 }); //又换了种风格，并且设定最长等待10秒

                $.post('/ExaminationSystem/StudentExamSys/ChoiceQuestionData', { examid: examid }, function (RESULT) {

                    console.log(RESULT);

                    if (RESULT.ErrorCode == 200) {
                        questionCount += RESULT.Data.data.length;
                        for (var i = 0; i < RESULT.Data.data.length; i++) {

                            var html = _.template($("#choicequestionmoban").html());

                            //获取分数
                            var itemscores = 0;
                            for (var j = 0; j < RESULT.Data.scores.length; j++) {

                                if (RESULT.Data.scores[j].level == RESULT.Data.data[i].Level.LevelID) {
                                    itemscores = RESULT.Data.scores[j].scores;
                                }
                            }

                            var a = $("<label></label>");
                            a.text(RESULT.Data.data[i].OptionA);

                            var b = $("<label></label>");
                            b.text(RESULT.Data.data[i].OptionB);

                            var c = $("<label></label>");
                            c.text(RESULT.Data.data[i].OptionC);

                            var d = $("<label></label>");
                            d.text(RESULT.Data.data[i].OptionD);

                            var title = $("<label></label>");
                            title.text(RESULT.Data.data[i].Title);

                            console.log(document.HTMLDOMtoString(title[0]));
                            console.log(document.HTMLDOMtoString(a[0]));
                            console.log(document.HTMLDOMtoString(b[0]));
                            console.log(document.HTMLDOMtoString(c[0])); console.log(document.HTMLDOMtoString(d[0]));
                            var htmldate = html({ questionid: RESULT.Data.data[i].Id, index: i + 1, question: document.HTMLDOMtoString(title[0]), A: document.HTMLDOMtoString(a[0]), B: document.HTMLDOMtoString(b[0]), C: document.HTMLDOMtoString(c[0]), D: document.HTMLDOMtoString(d[0]), score: itemscores });
                            $("#choicequestion").append(htmldate);

                        }
                        form.render();

                        //渲染分数
                        layer.close(index);
                    }
                    else {
                        layer.msg('服务器错误。。', { icon: 2 }, function () {
                            layer.close(index);
                        });
                    }
                });
                loadAnswerQuestionData();
            }
            function loadAnswerQuestionData() {
                var index = layer.load(2, { time: 10 * 1000 }); //又换了种风格，并且设定最长等待10秒
                $.post('/ExaminationSystem/StudentExamSys/answerQuestionData', { examid: examid }, function (RESULT) {
                    questionCount += RESULT.Data.length;
                    console.log(RESULT);
                    if (RESULT.ErrorCode == 200) {

                        layer.close(index);
                        for (var i = 0; i < RESULT.Data.data.length; i++) {

                            //获取分数
                            var itemscores = 0;
                            for (var j = 0; j < RESULT.Data.scores.length; j++) {


                                if (RESULT.Data.scores[j].level == RESULT.Data.data[i].Level.LevelID) {
                                    itemscores = RESULT.Data.scores[j].scores;
                                }
                            }

                            console.log(".....");
                            var html = _.template($("#answerquestionmoban").html());
                            var htmldate = html({ questionid: RESULT.Data.data[i].ID, index: i + 1, question: RESULT.Data.data[i].Title, score: itemscores });

                            $("#AnswerQuestion").append(htmldate);

                        }
                        //$('.layui-input-block').trumbowyg();
                        //$.trumbowyg.btnsGrps.test = ['bold', 'link'];
                        $.extend(true, $.trumbowyg.langs, {

                            fr: {

                                align: 'Alignement',

                                image: 'Image'

                            }

                        });
                        $('#customized-buttonpane').trumbowyg({

                            lang: 'fr',

                            closable: true,

                            fixedBtnPane: true,

                            btnsDef: {

                                // Customizables dropdowns

                                align: {

                                    dropdown: ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],

                                    ico: 'justifyLeft'

                                },

                                image: {

                                    dropdown: ['insertImage', 'upload', 'base64'],

                                    ico: 'insertImage'

                                }

                            },

                            btns: ['viewHTML',

                                '|', 'formatting',

                                '|', 'btnGrp-test',

                                '|', 'align',

                                '|', 'btnGrp-lists',

                                '|', 'image']

                        });
                        $('#form-content').trumbowyg({

                            lang: 'fr',

                            closable: true,

                            mobile: true,

                            fixedBtnPane: true,

                            fixedFullWidth: true,

                            semantic: true,

                            resetCss: true,

                            autoAjustHeight: true,

                            autogrow: true

                        });
                        $('.editor').on('dblclick', function (e) {

                            $(this).trumbowyg({

                                lang: 'fr',

                                closable: true,

                                fixedBtnPane: true

                            });

                        });

                    }
                    else {


                        layer.msg('服务器错误。。', { icon: 2 }, function () {
                            layer.close(index);
                        });


                    }

                });
            }
            loadChoiceQuestionData();

            var AnswerCommitarray = new Array();
            //获取解答题结果  表单数据
            function getAnswerCommit() {

                $("#AnswerQuestion .questionItem").each(function (index, elem) {

                    ///获取问题ID
                    var questionid = $(elem).attr("questionid");

                    //获取答案
                    var answer = $(elem).find(".desc").val();
                    console.log(answer);
                    //获取题目分数
                    var questionScores = $(elem).find(".hidescore").val();

                    var obj = {

                        questionid: questionid,
                        answer: answer,
                        questionScores: questionScores
                    };
                    AnswerCommitarray.push(obj);

                });


                var str = JSON.stringify(AnswerCommitarray);


                //放入表单数据
                formData.append("AnswerCommit", str);

            }
            //点击提交
            $("#COMMIT").click(function () {

                Commit(false);
            });

            function CommitAnswerSheet() {
                //需要先清空AnswerCommit 表单数据
                //clearformData(formData, ["AnswerCommit"]);
                var loadindex = layer.load(1, {
                    shade: [0.1, '#fff'] //0.1透明度的白色背景
                });
                var trueQuestionscores = 0; //获得选择题分数
                var ids = "";
                //提交前计算选择题分数
                $("#choicequestion .questionItem").each(function (index, elem) {

                    ids += $(elem).attr("questionid") + ',';

                });
                $.post('/ExaminationSystem/StudentExamSys/ChoiceQuestionAnswer', { questions: ids }, function (result) {

                    for (var i = 0; i < result.Data.length; i++) {

                        $("#choicequestion .questionItem").each(function (index, elem) {
                            var questionitem = $(elem);

                            var questionid = $(this).attr("questionid");

                            if (questionid == result.Data[i].questionid) {

                                //比较答案是否正确
                                //首先截取出答案
                                var arry_answer = result.Data[i].answer.split(',');

                                // arry_answer.pop();
                                //获取学员选择的答案
                                var arry_stuanswer = new Array();
                                $(this).find("input").each(function (index, elem) {

                                    if (elem.checked == true) {
                                        arry_stuanswer.push($(elem).val());

                                    }


                                });

                                console.log(arry_stuanswer);

                                ///判断答案是否一致
                                var isTrue = arry_answer.toString() == arry_stuanswer.toString();
                                questionitem.find(".title").find(".panduan").remove();

                                if (isTrue) {

                                    //如果一致
                                    var score = $(questionitem).find(".hidescore").val();

                                    trueQuestionscores += parseFloat(score);
                                    var span = $('<span class="panduan"><i style="font-size:25px; color:green;" class="layui-icon layui-icon-ok"></i></span>');
                                    //questionitem.find(".title").append(span);

                                }
                                else {
                                    var span = $('<span class="panduan"><i style="font-size:25px; color:red;" class="layui-icon layui-icon-close"></i></span>');
                                    //questionitem.find(".title").append(span);
                                }

                            }
                        });

                    }

                    //渲染选择题获得分数:
                    $(".choiceQuestionScoreshuode").text(trueQuestionscores);

                    //更新表单数据 选择题分数
                    formData.append("ChoiceScores", trueQuestionscores);

                    //更新表单数据
                    getAnswerCommit();
                    console.log(formData.get("AnswerCommit"));
                    var examid = $("#examid").val();
                    var choiceQuestionScoreshuode = $(".choiceQuestionScoreshuode").val();
                    //提交
                    $.ajax({
                        url: '/ExaminationSystem/StudentExamSys/AnswerSheetCommit',
                        type: "post",
                        contentType: false,
                        processData: false,
                        dataType: "json",//返回的数据格式
                        data: formData,
                        success: function (result) {
                            layer.close(loadindex);

                            if (result.ErrorCode == 200) {

                                layer.msg('成功。。', { icon: 1 }, function () {

                                    window.location.href = '/ExaminationSystem/StudentExamSys/MachineTest?examid=' + examid + '&choiceQuestionScoreshuode=' + choiceQuestionScoreshuode;
                                });
                                layui.form.render();
                            } else if (result.ErrorCode == 500) {
                                console.log(result.Data);
                                layer.msg('失败。。', { icon: 1 }, function () {


                                });
                                layui.form.render();
                            }
                        },
                        error: function () {
                            console.log(result.Data);
                            layer.msg('异常。。', { icon: 2 });
                        }


                    });

                    layer.close(loadindex);

                });

            }

            function Commit(IsAutoCommit) {

                if (IsAutoCommit == true) {

                    layer.msg("考试时间已到，正在自动提交！");

                    CommitAnswerSheet();

                }
                else {
                    var msg = "是否提交确认,提交后将无法再次作答?";

                    //if (formData.get("rarfile") == undefined) {
                    //    msg = "机试题未上传， 是否继续提交答卷";
                    //}

                    layer.confirm(msg, function (index) {
                        CommitAnswerSheet();
                    });
                }

            }

            $(document).off("click", ".optiond").on("click", ".optiond", function () {

                $(this).find("input").click();
            });

            //创建一个定时器 检查是否已经到了考试结束时间
            setInterval(function () {

                if (ExamEndDateUTC == undefined) {
                    getEndTime();
                }

                var currentDate = new Date();

                var EndDate = new Date(parseInt(ExamEndDateUTC));

                var a = new Date()
                a = a.getFullYear() + "-" + (a.getMonth() + 1) + "-" + a.getDate() + " " + a.getHours() + ":" + a.getMinutes();

                if (currentDate > EndDate) {

                    //自动点击提交
                    Commit(true);
                }
                else {
                    console.log("考试中......");
                }

            }, 60000);
            //var allowNum = 3; // 允许两次切屏，超过则提交
            //window.onblur = function () {
            //    if (allowNum < 1) {
            //        submitTest()
            //    }
            //    allowNum--;
            //    alert("您已切屏,剩余" + allowNum + "次自动提交试卷");
            //    if (allowNum == 0) {
            //        alert("您切屏超过3次,自动交卷！");
            //        CommitAnswerSheet();
            //    }
            //}
            //提前结束考试的方法
            function tiqian() {
                layer.msg("功能优化中!");
            }
            $("#tiqianjieshu").click(function () {
                var msg = "确定提前结束考试嘛?";
                layer.confirm(msg, function (index) {
                    tiqian();
                });
            })
        });


    </script>
</body>
</html>
