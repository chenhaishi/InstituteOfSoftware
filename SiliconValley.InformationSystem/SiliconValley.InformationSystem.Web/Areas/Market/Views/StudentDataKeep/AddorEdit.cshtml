
@{
    ViewBag.Title = "AddorEdit";
    Layout = "";
}

@model SiliconValley.InformationSystem.Entity.MyEntity.StudentPutOnRecord
@using SiliconValley.InformationSystem.Entity.MyEntity;

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />

<style>
    #but1
    {
        position: absolute;
        top: 13%;
        left: 35%;
        width: 36px;
        height: 36px;
        text-align: center;
        line-height: 36px;
    }

    #but1:hover
        {
            background-color: aqua;
        }
   
   .linu
    {
        width: 200px;
    }


    .LableCss1
    {
        text-overflow: ellipsis;
        white-space: nowrap;
        float: left;
        display: block;
        padding: 9px 15px;
        width: 80px;
        font-weight: 400;
        line-height: 20px;
        text-align: right
    }

    .TextAreCss1
    {
        height: 48px;
        width: 93%;
    }

    .butCss2
    {
        border: 0px solid black;
    }

    .layButCss1
    {
        display: inline-block;
        height: 38px;
        line-height: 38px;
        padding: 0 18px;
        background-color: #009688;
        color: #fff;
        white-space: nowrap;
        text-align: center;
        font-size: 14px;
        border: none;
        border-radius: 2px;
        cursor: pointer;
        border: 0px solid #C9C9C9;
        background-color: #fff;
        color: #555;
        height: 18px;
        line-height: 18px
    }

    .layui-unselect
    {
        width: 200px;
    }

    .needTextColor
    {
        color: red
    }

    .With
    {
        width: 93%;
    }
</style>
<div style="width:74%;margin:20px auto;">
    <form class="layui-form">
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label needTextColor">姓 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 名:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuName, new Dictionary<string, object>() { { "lay-verify", "required|StuName" }, { "placeholder", "学生姓名" }, { "class", "layui-input linu" } })
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">性 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 别:</label>
                <div class="layui-input-block">

                    <input id="Sexone" type="radio" name="StuSex" value="男" title="男"  checked="checked">
                    <input id="Sextwo" type="radio" name="StuSex" value="女" title="女">
                    <input id="Sextwo" type="radio" name="StuSex" value="0" title="未知">
                </div>
            </div>

        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label needTextColor">电 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 话:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuPhone, new Dictionary<string, object>() { { "placeholder", "联系电话" }, { "class", "layui-input linu" } ,{ "lay-verify" , "Replay" } })
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1 needTextColor">信息来源:</label>
                <div class="layui-input-block">
                    @Html.DropDownListFor(s => s.StuInfomationType_Id,ViewBag.infomation as IEnumerable<SelectListItem>, new Dictionary<string, object>() { { "lay-filter", "infoselect" } })
                </div>
            </div>
        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">所在区域:</label>
                <div class="layui-input-block">
                    @Html.DropDownListFor(s => s.Region_id, ViewBag.area as IEnumerable<SelectListItem>, new Dictionary<string, object>() { { "lay-filter", "areaselect" } })
                </div>
            </div>

            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label needTextColor">备 案 &nbsp;人:</label>
                <input type="hidden" id="EmployeesInfo_Id" name="EmployeesInfo_Id" />
                <input name="e_Name" id="e_Name" class="layui-input linu" readonly="readonly" placeholder="备案人" />
                <div style="margin-top:-30px;text-align:right;width:328px;">
                    <button type="button" class="layButCss1 butCss2" id="beanMan"> <i class="layui-icon layui-icon-search" style="font-size: 26px; color:lightseagreen;"></i></button>
                </div>
            </div>

        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1">籍 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 贯:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuAddress, new Dictionary<string, object>() { { "placeholder", "家庭住址" }, { "class", "layui-input linu" } })
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">关&nbsp; 系&nbsp;人:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.Party, new Dictionary<string, object>() { { "placeholder", "关系人" }, { "class", "layui-input linu" } })
                </div>
            </div>

        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1">学校名称:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuSchoolName, new Dictionary<string, object>() { { "placeholder", "学校名称" }, { "class", "layui-input linu" } })
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">学 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 历:</label>
                <div class="layui-input-block">
                    <select style="width:200px;" class="layui-select" id="StuEducational" name="StuEducational">
                        <option value="0" selected>其他</option>
                        <option value="初中">初中</option>
                        <option value="高中">高中</option>
                        <option value="大专">大专</option>
                        <option value="本科">本科</option>
                        <option value="中专">中专</option>
                    </select>
                </div>

            </div>

        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1">是否上门:</label>
                <div class="layui-input-block">
                    <div class="layui-col-sm7">
                        <input id="visitone" type="radio" name="StuIsGoto" value="true" title="是" lay-filter="radio1">
                    </div>
                    <div class="layui-col-sm3">
                        <input id="visitwo" type="radio" name="StuIsGoto" value="false" title="否" lay-filter="radio1" checked="checked">
                    </div>
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1">上门日期:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuVisit, new Dictionary<string, object>() { { "lay-verify", "StuDateTime|IsVisit" }, { "placeholder", "YY-MM-DD" }, { "class", "layui-input linu" }, { "disabled", "disabled" } })
                </div>
            </div>
        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">咨&nbsp;询 &nbsp; 师:</label>
                <div class="layui-input-block">
                    @Html.DropDownList("ConsultTeacher", ViewBag.ConsultTeacher as List<SelectListItem>)
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">微 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 信:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuWeiXin, new Dictionary<string, object>() { { "placeholder", "微信" }, { "class", "layui-input linu" } })
                </div>
            </div>
        </div>
        <div class="layui-row layui-form-item">
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="layui-form-label">Q &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuQQ, new Dictionary<string, object>() { { "placeholder", "QQ" }, { "class", "layui-input linu" } })
                </div>
            </div>
            <div class="layui-col-xs6 layui-col-sm6 layui-col-md6">
                <label class="LableCss1">出生日期:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.StuBirthy, new Dictionary<string, object>() { { "placeholder", "YY-MM-DD" }, { "lay-verify", "StuBirthy" }, { "class", "layui-input linu" } })
                </div>
            </div>
        </div>

        <div class="layui-row layui-form-item">
            <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                <label class="layui-form-label needTextColor">身 &nbsp;&nbsp;&nbsp;份&nbsp;&nbsp; 证:</label>
                <div class="layui-input-block">
                    @Html.TextBoxFor(s => s.IdCard, new Dictionary<string, object>() { { "placeholder", "身份证" }, { "class", "layui-input With" } ,{ "lay-verify", "idcards" } })
                </div>
            </div>
        </div>

        <div class="layui-row layui-form-item">

            <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                <input name="ShorPhone" id="ShorPhone" type="hidden" />
                <input name="ShorReacke" id="ShorReacke" type="hidden" />

                <label class="layui-form-label">其他说明:</label>
                <div class="layui-input-block">
                    @Html.TextAreaFor(s => s.Reak, new Dictionary<string, object>() { { "placeholder", "备注" }, { "class", "layui-input TextAreCss1" } })
                </div>
            </div>
        </div>
        <div class="layui-form-item" style="margin-top:40px;">
            <div class="layui-input-block" style="width:30%;margin-left:43%">
                <button type="submit" class="layui-btn" lay-submit="" lay-filter="tijiao">提交</button>
                <button type="button" class="layui-btn" id="quxiao">取消</button>
            </div>
        </div>
    </form>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/layui/layui.js"></script>
<script>
    //给网络短信属性赋值
    function ShortValue(phone, reak) {
        $("#ShorPhone").val(phone);
        $("#ShorReacke").val(reak);

        //console.log($("#ShorPhone").val() + "---" + $("#ShorReacke").val());
    }
    //给网络显示短信提示变量
    var net = 0;
    //给备案人赋值
    function BeanValue(Setvalues) {
        $("#e_Name")[0].value = Setvalues.name//(Setvalues.name);
        $("#EmployeesInfo_Id")[0].value = Setvalues.id;
    }
    //给录入人赋值
    function LuruValue(Setvlaue) {
        //console.log(Setvlaue);
        $("#StuEntering_1")[0].value = Setvlaue.name;
        $("#StuEntering")[0].value = Setvlaue.id;
    }
    $(function () {

        //弹出备案人员的所有信息
        $("#beanMan").click(function () {
            layui.use(['layer'], function () {
                var layer = layui.layer;
                layer.open({
                    type: 2,
                    content: '/Market/StudentDataKeep/ShowTree' //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                    , area: ['350px', '300px'],
                    title: '请选择备案人'
                    , shade: 0.8
                    , anim: 4
                    , skin: 'demo-class'
                });
            });
        });
        //姓名失去焦点事件
        $("#StuName").blur(function () {
            var name = $("#StuName").val();
            if (name.length > 0) {
                layui.use('layer', function () {
                    var layer = layui.layer;

                    var mmIndex = layer.load(1);
                    $.ajax({
                        url: "/Market/StudentDataKeep/FindStudent/" + name,
                        success: function (successdata) {
                            layer.close(mmIndex);
                            if (successdata.Success == false) {
                                //有相同的名称
                                layui.use('layer', function () {
                                    var layer = layui.layer;
                                    layer.open({
                                        type: 2,
                                        content: '/Market/StudentDataKeep/StudentSomeData/' + name
                                        , area: ['700px', '600px']
                                        , title: '疑似数据显示!'
                                        , shade: 0.8
                                        , anim: 4
                                        , skin: 'demo-class3'
                                    });
                                })
                            }
                        }
                    });
                })

            }

        });
    });
    layui.use(['form', 'layedit', 'laydate', 'table'], function () {
        var form = layui.form
            , layer = layui.layer
            , layedit = layui.layedit
            , laydate = layui.laydate
            , table = layui.table;
        var ityy;
        //刷新界面 所有元素
        form.render();
        //日期
        laydate.render({
            elem: '#StuDateTime'
            , type: 'date'
            , format: 'yyyy-MM-dd'
            , theme: 'grid'
            , trigger: 'click'
        });
        laydate.render({
            elem: '#StuVisit'
            , type: 'date'
            , format: 'yyyy-MM-dd'
            , theme: 'grid'
            , trigger: 'click'
        });
        laydate.render({
            elem: '#StuBirthy'
            , type: 'date'
            , format: 'yyyy-MM-dd'
            , theme: 'grid'
            , trigger: 'click'
        });


        //监听是否上门单选按钮事件
        form.on('radio(radio1)', function (data) {
            ityy = data.value;
            if (data.value == "true") {
                $("#StuVisit")[0].removeAttribute("disabled");//可用
            } else {
                $("#StuVisit")[0].setAttribute("disabled", "false");//禁用
                $("#StuVisit")[0].value = null;
            }

        });

        $("#quxiao").click(function () {
            var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
            parent.layer.close(index); //再执行关闭

        });

        //自定义验证规则
        form.verify({
            IsVisit: function (value) {
                var isttur = $('input[name="StuIsGoto"]:checked').val();
                var reg = /^ *$/;  //这里^和*之间有一个空格
                var Is = reg.test(value);
                if (ityy != "false" && isttur == "true") {
                    if (Is == true) {
                        return "上门日期不能为空";
                    }

                }
            },
            Replay: function (value) {               
                if (value.length==11) {
                    var sss = value.split(" ");
                    if (sss.length >= 2) {
                        return '不能有空格！';
                    }
                    var reg = /^[\u4e00-\u9fa50-9A-Za-z]+$/;
                    var Is = reg.test(value);
                    if (Is == false) {
                        return '不能出现标点符号！';
                    }

                    var reg2 = /^1[23456789]\d{9}$/;
                    var Is2 = reg2.test(value);

                    if (Is2 == false) {
                        return '不能出现字母,汉字！';
                    }

                } else if (value.length != 11 && value.length>0) {
                    return '电话号码长度为11位！';
                                   
                }                
            },
            StuName: function (value) {
                var sss = value.split(" ");
                if (sss.length >= 2) {
                    return '不能有空格！';
                }
                var reg = /^[\u4e00-\u9fa50-9A-Za-z]+$/;
                var Is = reg.test(value);
                if (Is == false) {
                    return '不能出现标点符号！';
                }

                var reg2 = /\w/;
                var Is2 = reg2.test(value);

                if (Is2 == true) {
                    return '不能出现数字、字母！';
                }

            }
            ,idcards: function (value) {
                var reg = /^[1-8][1-7]\d{4}(?:19|20)\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])\d{3}[\dX]$/;
                var is = reg.test(value);
                if (value.length>0 && is == false) {
                    return "身份证无效！";
                }
                
            }
        });

        //提交数据
        form.on('submit(tijiao)', function (data) {            
            if (data.field.StuPhone == "" && data.field.StuWeiXin == "" && data.field.StuQQ == "") {
                layer.msg("电话、微信、QQ至少要填一个！", { icon: 2, shade: 0.8 });
            } else if (data.field.StuAddress == "" && data.field.StuSchoolName == "") {
                layer.msg("籍贯、学校！至少要填一个！", { icon: 2, shade: 0.8 });
            } else if (data.field.EmployeesInfo_Id == "") {
                layer.msg("备案人必填！", { icon: 2, shade: 0.8 });
            } else {
                var myindexdd = layer.load(1);
                if (data.field.Region_id == "区域外") {
                    data.field.Region_id = null;
                }               
                $.ajax({
                    url: "/Market/StudentDataKeep/StudentDataKeepAdd",
                    data: data.field,
                    type: "POST",
                    success: function (successdata) {
                        layer.close(myindexdd);
                        if (successdata.Success == true) {
                            layer.msg(successdata.Msg, {
                                icon: 1,
                                time: 2000,
                                shade: 0.8
                            }, function (index) {
                                window.parent.LoadTable2();
                                var Myindex = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
                                parent.layer.close(Myindex); //再执行关闭
                                layer.close(index);
                            });
                        } else {
                            layer.msg(successdata.Msg, {
                                icon: 2,
                            });
                        }
                    }
                });

            }

            return false;
        });

        //获取信息来源
        form.on('select(infoselect)', function (data) {
            $(data.elem).children().each(function (innumber, ele) {
                if ($(ele).val() == data.value) {
                    if ($(ele)[0].innerText == "网络") {
                        net = data.value;
                    }
                }
            })
        });

        //获取选择的区域
        form.on('select(areaselect)', function (data) {

            if (net != 0 && data.value != "区域外") {
                //根据选择的区域获取负责的市场老师
                layer.open({
                    type: 2
                    , content: '/Market/StudentDataKeep/ShortInfoMationView/' + data.value
                    , area: ['550px', '450px']
                    , title: '短信发送页面'
                    , shade: 0.8
                    , anim: 4
                    , skin: 'demo-class'
                });
            }
        });
    });
</script>






